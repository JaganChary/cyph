@import '/node_modules/@angular/material/theming';

@mixin breathe {
	@include animation-name(breathe !important);

	@include animation-duration(3s !important);

	@include animation-timing-function(ease-in-out !important);

	@include animation-iteration-count(infinite !important);
}

/* Changes size of md-icon */
@mixin icon-size($size) {
	font-size: $size;
	height: $size;
	min-height: $size;
	width: $size;
	min-width: $size;
}

@mixin vertical-align {
	position: relative;
	top: 50%;

	@include transform(translateY(-50%));
}

@mixin cyph-apply-theme($isRoot: false) {
	$root: if($isRoot, body, &);

	$cyph-theme: cyph-theme(
		$cyph-primary,
		$cyph-accent,
		$cyph-warn,
		$cyph-background,
		$cyph-foreground,
		$cyph-is-dark
	);

	$cyph-progress-theme: map-merge($cyph-theme, (
		primary: map-merge($cyph-primary, (
			100: rgba(0, 0, 0, 0.15),
			600: $cyph-progress-foreground
		))
	));

	$cyph-speed-dial-action-palette: mat-palette($mat-grey, 50, 50, 100);

	$cyph-speed-dial-action-theme: cyph-theme(
		$cyph-speed-dial-action-palette,
		map-merge($cyph-speed-dial-action-palette, (
			default-contrast: map-get($cyph-message-box-colors, buttons)
		)),
		$cyph-warn,
		$cyph-background,
		$cyph-foreground,
		false
	);

	@include angular-material-theme($cyph-theme);
	@include mat-progress-bar-theme($cyph-progress-theme);
	@include mat-progress-spinner-theme($cyph-progress-theme);

	/* Temporary workaround pending https://github.com/angular/material2/issues/4116 */
	md-dialog-container, md-option {
		color: $cyph-foreground;
	}

	#{$root}, #main, .cyph-foreground {
		background-color: $cyph-background !important;
	}

	blockquote {
		border-left: 2px solid $cyph-foreground !important;
	}

	h3.cyph-banner {
		color: $cyph-background;
		background-color: $cyph-foreground;
	}

	cyph-account, cyph-lockdown {
		.login-form .cyph-banner {
			color: map-get($cyph-warn, default);
		}
	}

	cyph-chat-main {
		.chat-main.video .friend-is-typing .ellipsis-spinner > div {
			background-color: $cyph-inverted;
		}

		.ellipsis-spinner > div {
			background-color: $cyph-foreground;
		}

		.chat-main.video .video-call ~ cyph-chat-message-box .menu-button md-icon {
			color: $cyph-inverted !important;
		}

		.chat-main.mobile, .chat-main.video .video-call ~ cyph-chat-message-list {
			.message-item.author-app {
				background-color: map-get(map-get($cyph-message-colors, app), mobile);
				box-shadow: 0px 0px 5px map-get(map-get($cyph-message-colors, app), mobile);
			}

			.message-item.author-me {
				background-color: map-get(map-get($cyph-message-colors, me), mobilePrimary);
				box-shadow: 0px 0px 5px map-get(map-get($cyph-message-colors, me), mobilePrimary);

				&:before {
					box-shadow: 5px 1px 5px map-get(map-get($cyph-message-colors, me), mobileShadow);
				}

				&:after {
					border-color: transparent map-get(map-get($cyph-message-colors, me), mobileBorder);
				}
			}

			.message-item.author-other {
				background-color: map-get(map-get($cyph-message-colors, other), mobilePrimary);
				box-shadow: 0px 0px 5px map-get(map-get($cyph-message-colors, other), mobilePrimary);

				&:before {
					box-shadow: 5px 1px 5px map-get(map-get($cyph-message-colors, other), mobileShadow);
				}

				&:after {
					border-color: transparent map-get(map-get($cyph-message-colors, other), mobileBorder);
				}
			}
		}
	}

	cyph-chat-cyphertext {
		@include angular-material-theme($cyph-cyphertext-theme);
	}

	cyph-chat-message {
		.message-item {
			&.author-app {
				background-color: map-get(map-get($cyph-message-colors, app), desktop);
				box-shadow: 0px 0px 5px map-get(map-get($cyph-message-colors, app), desktop);
				color: map-get(map-get($cyph-message-colors, app), text);
			}

			&.author-me {
				background-color: map-get(map-get($cyph-message-colors, me), desktop);
				box-shadow: 0px 0px 5px map-get(map-get($cyph-message-colors, me), desktop);
				color: map-get(map-get($cyph-message-colors, me), text);
			}

			&.author-other {
				background-color: map-get(map-get($cyph-message-colors, other), desktop);
				box-shadow: 0px 0px 5px map-get(map-get($cyph-message-colors, other), desktop);
				color: map-get(map-get($cyph-message-colors, other), text);
			}
		}
	}

	cyph-chat-message-box {
		.chat-message-box {
			.message-box {
				color: map-get($cyph-message-box-colors, text);

				@if map-has-key($cyph-message-box-colors, background) {
					background-color: map-get($cyph-message-box-colors, background);
				}
			}

			.message-box-button-group button md-icon {
				color: map-get($cyph-message-box-colors, buttons);
			}

			&:not(.mobile) .message-box {
				@if map-has-key($cyph-message-box-colors, desktopBackground) {
					background-color: map-get($cyph-message-box-colors, desktopBackground);
				}

				&:focus {
					box-shadow: 0px 0px 10px map-get($cyph-message-box-colors, desktopGlow);
					border: 1px solid map-get($cyph-message-box-colors, desktopGlow);
				}
			}

			&.mobile .message-box {
				@if map-has-key($cyph-message-box-colors, mobileBackground) {
					background-color: map-get($cyph-message-box-colors, mobileBackground);
				}

				&:focus {
					box-shadow: 0px 0px 10px map-get($cyph-message-box-colors, mobileGlow);
					border: 1px solid map-get($cyph-message-box-colors, mobileGlow);
				}
			}
		}
	}

	cyph-checkout {
		.checkout-ui {
			color: map-get(map-get($cyph-checkout-theme, foreground), text);

			@include mat-input-theme($cyph-checkout-theme);
		}
	}

	smd-fab-actions {
		@include mat-button-theme($cyph-speed-dial-action-theme);

		button.alt {
			background-color: $cyph-speed-dial-action-alt-background;
			color: $cyph-speed-dial-action-alt-foreground;
		}
	}
}

@function cyph-theme($primary, $accent, $warn, $background, $foreground, $isDark) {
	@return (
		primary: $primary,
		accent: $accent,
		warn: $warn,
		is-dark: $isDark,
		foreground: map-merge(
			if($isDark, $mat-dark-theme-foreground, $mat-light-theme-foreground),
			(
				base:  $foreground,
				icon:  $foreground,
				icons: $foreground,
				text:  $foreground
			)
		),
		background: map-merge(
			if(
				$isDark,
				map-merge($mat-dark-theme-background, (
					app-bar:         map-get($primary, default),
					card:            map-get($accent, default),
					dialog:          map-get($accent, lighter),
					raised-button:   map-get($primary, default),
					selected-button: map-get($accent, darker),
					status-bar:      mat-color($primary, 600)
				)),
				$mat-light-theme-background
			),
			(
				background:      $background
			)
		)
	);
}

@function invert-palette($base-palette) {
	@return map-merge($base-palette, (
		50:   map-get($base-palette, 900),
		100:  map-get($base-palette, 800),
		200:  map-get($base-palette, 700),
		300:  map-get($base-palette, 600),
		400:  map-get($base-palette, 500),
		500:  map-get($base-palette, 400),
		600:  map-get($base-palette, 300),
		700:  map-get($base-palette, 200),
		800:  map-get($base-palette, 100),
		900:  map-get($base-palette, 50),
		A100: map-get($base-palette, A700),
		A200: map-get($base-palette, A400),
		A400: map-get($base-palette, A200),
		A700: map-get($base-palette, A100),
		contrast: (
			50:   map-get(map-get($base-palette, contrast), 900),
			100:  map-get(map-get($base-palette, contrast), 800),
			200:  map-get(map-get($base-palette, contrast), 700),
			300:  map-get(map-get($base-palette, contrast), 600),
			400:  map-get(map-get($base-palette, contrast), 500),
			500:  map-get(map-get($base-palette, contrast), 400),
			600:  map-get(map-get($base-palette, contrast), 300),
			700:  map-get(map-get($base-palette, contrast), 200),
			800:  map-get(map-get($base-palette, contrast), 100),
			900:  map-get(map-get($base-palette, contrast), 50),
			A100: map-get(map-get($base-palette, contrast), A700),
			A200: map-get(map-get($base-palette, contrast), A400),
			A400: map-get(map-get($base-palette, contrast), A200),
			A700: map-get(map-get($base-palette, contrast), A100)
		)
	));
}
