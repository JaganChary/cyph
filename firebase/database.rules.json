{
	"rules": {
		".read": false,
		".write": false,

		"$namespace": {
			"channels": {
				"$channel": {
					".read": true,
					".write": true,

					"disconnects": {
						"$user": {
							".validate": "newData.val() === now"
						}
					},

					"handshake": {
						"alicePublicKey": {
							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						},
						"bobPublicKey": {
							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						},
						"initialSecretAliceCyphertext": {
							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						},
						"initialSecretBobCyphertext": {
							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					},

					"lock": {
						"$contender": {
							"id": {
								".validate": "newData.isString()"
							},
							"reason": {
								".validate": "newData.isString()"
							}
						}
					},

					"messages": {
						"$message": {
							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					},

					"users": {
						"$user": {
							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					}
				}
			},

			"emails": {
				"$email": {
					".read": true,

					"hash": {
						".validate": "newData.isString()"
					},
					"timestamp": {
						".validate": "newData.val() === now"
					}
				}
			},

			"fileTransfers": {
				"$file": {
					".read": true,
					".write": true,

					"hash": {
						".validate": "newData.isString()"
					},
					"timestamp": {
						".validate": "newData.val() === now"
					}
				}
			},

			"inviteCodes": {
				"$code": {
					".validate": "newData.isString()"
				}
			},

			"pendingSignups": {
				"$username": {
					"timestamp": {
						".validate": "newData.val() === now"
					},
					"uid": {
						".validate": "newData.isString()"
					}
				}
			},

			"pushlocks": {
				"$contender": {
					".read": true,
					".write": true,

					"id": {
						".validate": "newData.isString()"
					},
					"reason": {
						".validate": "newData.isString()"
					}
				}
			},

			"users": {
				"$user": {
					".read": "($user + '@' + $DOMAIN) === auth.token.email",
					".write": "($user + '@' + $DOMAIN) === auth.token.email",

					"avatar": {
						".read": true,

						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"coverImage": {
						".read": true,

						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"certificate": {
						".read": true,
						".write": false,

						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"certificateRequest": {
						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"clientConnections": {
						"$clientConnection": {
							".validate": "newData.val() === now"
						}
					},

					"contactUsernames": {
						"$username": {
							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					},

					"contacts": {
						"$contact": {
							"lastConfirmedMessage": {
								"hash": {
									".validate": "newData.isString()"
								},
								"timestamp": {
									".validate": "newData.val() === now"
								}
							},
							"messages": {
								"$message": {
									"hash": {
										".validate": "newData.isString()"
									},
									"timestamp": {
										".validate": "newData.val() === now"
									}
								}
							},
							"messageValues": {
								"$messageValue": {
									"hash": {
										".validate": "newData.isString()"
									},
									"timestamp": {
										".validate": "newData.val() === now"
									}
								}
							},
							"session": {
								"asymmetricRatchetState": {
									"privateKey": {
										"hash": {
											".validate": "newData.isString()"
										},
										"timestamp": {
											".validate": "newData.val() === now"
										}
									},
									"publicKey": {
										"hash": {
											".validate": "newData.isString()"
										},
										"timestamp": {
											".validate": "newData.val() === now"
										}
									}
								},
								"channelUserID": {
									"hash": {
										".validate": "newData.isString()"
									},
									"timestamp": {
										".validate": "newData.val() === now"
									}
								},
								"handshake": {
									"currentStep": {
										"hash": {
											".validate": "newData.isString()"
										},
										"timestamp": {
											".validate": "newData.val() === now"
										}
									},
									"initialSecret": {
										"hash": {
											".validate": "newData.isString()"
										},
										"timestamp": {
											".validate": "newData.val() === now"
										}
									}
								},
								"incomingMessageID": {
									"hash": {
										".validate": "newData.isString()"
									},
									"timestamp": {
										".validate": "newData.val() === now"
									}
								},
								"incomingMessageQueue": {
									"hash": {
										".validate": "newData.isString()"
									},
									"timestamp": {
										".validate": "newData.val() === now"
									}
								},
								"incomingMessages": {
									"hash": {
										".validate": "newData.isString()"
									},
									"timestamp": {
										".validate": "newData.val() === now"
									}
								},
								"incomingMessagesMax": {
									"hash": {
										".validate": "newData.isString()"
									},
									"timestamp": {
										".validate": "newData.val() === now"
									}
								},
								"outgoingMessageID": {
									"hash": {
										".validate": "newData.isString()"
									},
									"timestamp": {
										".validate": "newData.val() === now"
									}
								},
								"outgoingMessageQueue": {
									"$outgoingMessage": {
										"hash": {
											".validate": "newData.isString()"
										},
										"timestamp": {
											".validate": "newData.val() === now"
										}
									}
								},
								"symmetricKey": {
									"hash": {
										".validate": "newData.isString()"
									},
									"timestamp": {
										".validate": "newData.val() === now"
									}
								},
								"symmetricRatchetState": {
									"current": {
										"incoming": {
											"hash": {
												".validate": "newData.isString()"
											},
											"timestamp": {
												".validate": "newData.val() === now"
											}
										},
										"outgoing": {
											"hash": {
												".validate": "newData.isString()"
											},
											"timestamp": {
												".validate": "newData.val() === now"
											}
										}
									},
									"next": {
										"incoming": {
											"hash": {
												".validate": "newData.isString()"
											},
											"timestamp": {
												".validate": "newData.val() === now"
											}
										},
										"outgoing": {
											"hash": {
												".validate": "newData.isString()"
											},
											"timestamp": {
												".validate": "newData.val() === now"
											}
										}
									}
								}
							}
						}
					},

					"docs": {
						"$doc": {
							".read": true,

							"$delta": {
								"hash": {
									".validate": "newData.isString()"
								},
								"timestamp": {
									".validate": "newData.val() === now"
								}
							}
						}
					},

					"email": {
						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"encryptionKeyPair": {
						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"fileRecords": {
						"$fileRecord": {
							".read": true,

							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					},

					"fileReferences": {
						"$fileReference": {
							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					},

					"files": {
						"$file": {
							".read": true,
							".write": "($user + '@' + $DOMAIN) === auth.token.email || (!data.exists() && newData.exists())",

							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					},

					"forms": {
						"$form": {
							".read": true,

							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					},

					"incomingFiles": {
						"$incomingFile": {
							".write": "($user + '@' + $DOMAIN) === auth.token.email || (!data.exists() && newData.exists())",

							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					},

					"internal": {
						".read": false,
						".write": false,

						"email": {
							".validate": "newData.isString()"
						},
						"name": {
							".validate": "newData.isString()"
						},
						"realUsername": {
							".validate": "newData.isString()"
						},
						"registrationEmailSent": {
							".validate": "newData.isBoolean()"
						}
					},

					"inviteCode": {
						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"inviteCodes": {
						".write": false,

						"$code": {
							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					},

					"inviterUsername": {
						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"inviterUsernamePlaintext": {
						".write": "!newData.exists()",

						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"lastPresence": {
						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"locks": {
						"$lock": {
							"$contender": {
								"id": {
									".validate": "newData.isString()"
								},
								"reason": {
									".validate": "newData.isString()"
								}
							}
						}
					},

					"loginData": {
						".read": true,

						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"messagingTokens": {
						"$messagingToken": {
							".validate": "newData.exists()"
						}
					},

					"notifications": {
						"$notification": {
							"subType": {
								".validate": "newData.isNumber()"
							},
							"target": {
								".validate": "newData.isString()"
							},
							"type": {
								".validate": "newData.isNumber()"
							}
						}
					},

					"organizationMembers": {
						".read": true,

						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"patientInfo": {
						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"pin": {
						"hash": {
							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						},
						"isCustom": {
							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					},

					"presence": {
						".read": true,

						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"publicEncryptionKey": {
						".read": true,

						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"publicProfile": {
						".read": true,

						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"publicProfileExtra": {
						".read": true,

						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"reviews": {
						".read": true,

						"$username": {
							".write": "($username + '@' + $DOMAIN) === auth.token.email",

							"hash": {
								".validate": "newData.isString()"
							},
							"timestamp": {
								".validate": "newData.val() === now"
							}
						}
					},

					"settings": {
						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"signingKeyPair": {
						"hash": {
							".validate": "newData.isString()"
						},
						"timestamp": {
							".validate": "newData.val() === now"
						}
					},

					"$other": {
						".validate": false
					}
				}
			}
		}
	}
}
